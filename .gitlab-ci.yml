image: registry.gitlab.com/bluestarsports/npdb-usafb-api/php-fpm:latest

variables:
  APP_NAME: npdb-usafb-api
  app_container_name: npdb-usafb-app
  app_second_container_name: npdb-usafb-nginx
  app_second_name: npdb-usafb-api-nginx

stages:
  - setup
  - test
  - app_build
  - build
  - build_workers
  - deploy

setup:
  type: setup
  script:
    - composer install --quiet --no-interaction
    - cp .env.testing .env
  cache:
    key: ${CI_BUILD_REF_NAME}
    paths:
      - vendor/
  artifacts:
    expire_in: 1 week
    paths:
      - vendor/

test:
  type: test
  script:
    - cp .env.testing .env
    - composer test

lint:
  type: test
  script:
    - composer lint

automation:
  type: test
  script:
    - cp .env.testing .env
    - composer env:prereq
    - php -S localhost:8000 -t public 1>/dev/null &
    - composer --global config process-timeout 20000
    - composer test:reg
    - cp .env.testing .env
    - killall php

new_relic_config:
  stage: app_build
  only:
    - develop
    - master
    - new-staging-deploy
  environment:
    name: new_relic_staging
  before_script:
    - apt-get update
    - apt-get install -y gettext
  script:
    - . deploy/scripts/newrelic_deploy.sh
  artifacts:
    expire_in: 1 week
    paths:
      - docker/newrelic/newrelic.ini

build:
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://localhost:2375
  services:
    - docker:dind
  before_script:
    - docker info
  stage: build
  only:
    - develop
    - master
    - new-staging-deploy
  allow_failure: false
  script:
    - docker login registry.gitlab.com -u npdbtest -p $gitlab_personal_token
    - docker build -t registry.gitlab.com/bluestarsports/npdb-usafb-api:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID --build-arg GIT_DEPLOYED_SHA="$CI_COMMIT_SHA" .
    - docker push registry.gitlab.com/bluestarsports/npdb-usafb-api:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID

build_nginx_static:
  stage: build_workers
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://localhost:2375
  services:
    - docker:dind
  before_script:
    - docker info
  only:
    - develop
    - master
    - new-staging-deploy
  script:
    - docker login registry.gitlab.com -u npdbtest -p $gitlab_personal_token
    - docker build -t registry.gitlab.com/bluestarsports/npdb-usafb-api/npdb-usafb-api-nginx:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID -f Dockerfile.nginx .
    - docker push registry.gitlab.com/bluestarsports/npdb-usafb-api/npdb-usafb-api-nginx:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID

staging_deploy:
  stage: deploy
  only:
    - develop
    - new-staging-deploy
  allow_failure: false
  environment:
    name: staging 
  variables:
    image_tag: :$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID
  before_script:
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
  script:
    - . deploy/scripts/setup_kube_config.sh
    - kubectl cluster-info
    - . deploy/scripts/deploy_app.sh
